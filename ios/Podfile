# === Robust Podfile for React Native (устойчив к отсутствию node_modules / Node 24) ===

def require_with_fallback(node_path, fallback_rel)
  begin
    require Pod::Executable.execute_command(
      'node',
      ['-p', "require.resolve(\"#{node_path}\", { paths: [process.argv[1]] })", __dir__]
    ).strip
  rescue
    require File.expand_path(fallback_rel, __dir__)
  end
end

# 1) RN pods script + 2) native_modules (с фолбэком)
require_with_fallback('react-native/scripts/react_native_pods.rb',
                      '../node_modules/react-native/scripts/react_native_pods.rb')
require_with_fallback('@react-native-community/cli-platform-ios/native_modules.rb',
                      '../node_modules/@react-native-community/cli-platform-ios/native_modules.rb')

platform :ios, min_ios_version_supported
prepare_react_native_project!

# Можно управлять линковкой через переменную окружения:
#   USE_FRAMEWORKS=static / dynamic
linkage = ENV['USE_FRAMEWORKS']
use_frameworks! :linkage => linkage.to_sym if linkage

target 'TalesOfTheMagicPanda' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => true,
    :fabric_enabled => true,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # При необходимости можно временно отключить Flipper (частая причина линковки):
  # use_flipper!() unless ENV['NO_FLIPPER'] == "1"

  post_install do |installer|
    react_native_post_install(installer, :mac_catalyst_enabled => false)

    is_intel = `uname -m`.strip == 'x86_64'   # На Intel исключаем arm64 в симуляторе
    installer.pods_project.targets.each do |t|
      t.build_configurations.each do |config|
        flags = config.build_settings['OTHER_LDFLAGS'] || ['$(inherited)']
        flags << '-ObjC' unless flags.include?('-ObjC')
        config.build_settings['OTHER_LDFLAGS'] = flags
        if is_intel
          config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
        end
      end
    end
  end
end
